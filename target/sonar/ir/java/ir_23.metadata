com.spring.bioMedical.config.SecurityConfiguration#configure(Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;)V
org.springframework.security.config.annotation.web.builders.HttpSecurity#formLogin()Lorg/springframework/security/config/annotation/web/configurers/FormLoginConfigurer;
org.springframework.security.config.annotation.web.builders.HttpSecurity#exceptionHandling()Lorg/springframework/security/config/annotation/web/configurers/ExceptionHandlingConfigurer;
org.springframework.security.config.annotation.web.builders.HttpSecurity#authorizeRequests()Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry;
org.springframework.security.config.annotation.web.builders.HttpSecurity#logout()Lorg/springframework/security/config/annotation/web/configurers/LogoutConfigurer;
org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer#successHandler(Lorg/springframework/security/web/authentication/AuthenticationSuccessHandler;)Lorg/springframework/security/config/annotation/web/configurers/AbstractAuthenticationFilterConfigurer;
org.springframework.security.config.annotation.web.configurers.ExceptionHandlingConfigurer#accessDeniedPage(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ExceptionHandlingConfigurer;
org.springframework.security.config.annotation.web.configurers.LogoutConfigurer#permitAll()Lorg/springframework/security/config/annotation/web/configurers/LogoutConfigurer;
org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer#loginPage(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/FormLoginConfigurer;
org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer#permitAll()Lorg/springframework/security/config/annotation/web/configurers/AbstractAuthenticationFilterConfigurer;
==
and org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry#and()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
hasRole org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$AuthorizedUrl#hasRole(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry;
authenticated org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$AuthorizedUrl#authenticated()Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry;
and org.springframework.security.config.annotation.SecurityConfigurerAdapter#and()Lorg/springframework/security/config/annotation/SecurityBuilder;
permitAll org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$AuthorizedUrl#permitAll()Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry;
loginProcessingUrl org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer#loginProcessingUrl(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/AbstractAuthenticationFilterConfigurer;
anyRequest org.springframework.security.config.annotation.web.AbstractRequestMatcherRegistry#anyRequest()Ljava/lang/Object;
antMatchers org.springframework.security.config.annotation.web.AbstractRequestMatcherRegistry#antMatchers([Ljava/lang/String;)Ljava/lang/Object;